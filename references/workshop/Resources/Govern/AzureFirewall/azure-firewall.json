{
      "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "Organization_Name": {
          "type": "string",
          "metadata": {
            "description": "Organization name. For example: Contoso"
          }
        },
        "azure-firewall-private-ip": {
          "type": "string",
          "defaultValue": "10.0.4.4",
          "metadata": {
            "displayName": "Azure firewall private IP"
          }
        },
        "logs-retention-in-days": {
          "type": "int",
          "defaultValue": 365,
          "minValue": 0,
          "maxValue": 365,
          "metadata": {
            "displayName": "Log retention in days",
            "description": "Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely"
          }
        }
      },
      "variables": {
        "deployment-prefix": "[concat(parameters('Organization_Name'), '-sharedsvcs')]",
        "oms-workspace-resourceGroup": "[concat(variables('deployment-prefix'), '-rg')]",
        "oms-workspace-name": "[concat(variables('deployment-prefix'), '-log')]",
        "vnet-resourceGroup": "[concat(parameters('Organization_Name'), '-VNet-rg')]",
        "vnet-name": "CAFVNET",
        "azure-fw-subnet-ID": "[concat(resourceId(variables('vnet-resourceGroup'), 'Microsoft.Network/virtualNetworks', variables('vnet-name')) , '/subnets/AzureFirewallSubnet')]",
        "azure-fw-pip-name": "[concat(variables('deployment-prefix'), '-az-fw-pip')]",
        "azure-fw-pip-id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('azure-fw-pip-name'))]",
        "azure-fw-name": "[concat(variables('deployment-prefix'), '-az-fw')]",
        "uniqueString": "[uniqueString(subscription().id, concat(variables('deployment-prefix'), '-log'))]",
        "diagnostic-storageAccount-prefix": "[concat(replace(variables('deployment-prefix'), '-', ''), 'diag')]",
        "diagnostic-storageAccount-name": "[toLower(substring(replace(concat(variables('diagnostic-storageAccount-prefix'), variables('uniqueString'), variables('uniqueString')), '-', ''), 0, 23) )]",
        "sharedsvcs-user-defined-routes": {
          "name": "sharedsvcs-subnet",
          "routes": [
            {
              "name": "default",
              "properties": {
                "addressPrefix": "0.0.0.0/0",
                "nextHopIpAddress": "[parameters('azure-firewall-private-ip')]",
                "nextHopType": "VirtualAppliance"
              }
            }
          ]
        }
      },
      "resources": [
        {
          "name": "[variables('azure-fw-pip-name')]",
          "type": "Microsoft.Network/publicIPAddresses",
          "apiVersion": "2017-10-01",
          "location": "[resourceGroup().location]",
          "sku": {
            "name": "Standard"
          },
          "tags": {
            "displayName": "[variables('azure-fw-pip-name')]"
          },
          "properties": {
            "publicIPAllocationMethod": "Static",
            "publicIPAddressVersion": "IPv4"
          }
        },
        {
          "type": "Microsoft.Network/publicIPAddresses/providers/diagnosticSettings",
          "apiVersion": "2017-05-01-preview",
          "name": "[concat(variables('azure-fw-pip-name'), '/Microsoft.Insights/service')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[variables('azure-fw-pip-name')]"
          ],
          "properties": {
            "storageAccountId": "[resourceId(variables('oms-workspace-resourceGroup'), 'Microsoft.Storage/storageAccounts', variables('diagnostic-storageAccount-name'))]",
            "workspaceId": "[resourceId(variables('oms-workspace-resourceGroup'), 'Microsoft.OperationalInsights/workspaces', variables('oms-workspace-name'))]",
            "metrics": [
              {
                "category": "AllMetrics",
                "timeGrain": null,
                "enabled": true,
                "retentionPolicy": {
                  "enabled": true,
                  "days": "[parameters('logs-retention-in-days')]"
                }
              }
            ],
            "logs": [
              {
                "category": "DDoSProtectionNotifications",
                "enabled": true
              },
              {
                "category": "DDoSMitigationFlowLogs",
                "enabled": true
              },
              {
                "category": "DDoSMitigationReports",
                "enabled": true
              }
            ]
          }
        },
        {
          "apiVersion": "2018-08-01",
          "type": "Microsoft.Network/azureFirewalls",
          "name": "[variables('azure-fw-name')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Network/publicIPAddresses', variables('azure-fw-pip-name'))]"
          ],
          "properties": {
            "ipConfigurations": [
              {
                "name": "IpConf",
                "properties": {
                  "subnet": {
                    "id": "[variables('azure-fw-subnet-ID')]"
                  },
                  "publicIPAddress": {
                    "id": "[variables('azure-fw-pip-id')]"
                  }
                }
              }
            ],
            "applicationRuleCollections": [
              {
                "name": "allow-app-rules",
                "properties": {
                  "priority": 100,
                  "action": {
                    "type": "allow"
                  },
                  "rules": [
                    {
                      "name": "allow-ase-tags",
                      "sourceAddresses": [
                        "*"
                      ],
                      "protocols": [
                        {
                          "protocolType": "HTTP",
                          "port": "80"
                        },
                        {
                          "protocolType": "HTTPS",
                          "port": "443"
                        }
                      ],
                      "fqdnTags": [
                        "AppServiceEnvironment",
                        "WindowsUpdate"
                      ]
                    },
                    {
                      "name": "allow-ase-management",
                      "sourceAddresses": [
                        "*"
                      ],
                      "protocols": [
                        {
                          "protocolType": "HTTP",
                          "port": "80"
                        },
                        {
                          "protocolType": "HTTPS",
                          "port": "443"
                        }
                      ],
                      "targetFqdns": [
                        "management.azure.com",
                        "*.digicert.com",
                        "*.data.microsoft.com",
                        "global.metrics.nsatc.net",
                        "ocsp.msocsp.com"
                      ]
                    },
                    {
                      "name": "allow-sites",
                      "sourceAddresses": [
                        "*"
                      ],
                      "protocols": [
                        {
                          "protocolType": "HTTP",
                          "port": "80"
                        },
                        {
                          "protocolType": "HTTPS",
                          "port": "443"
                        }
                      ],
                      "targetFqdns": [
                        "*.trafficmanager.net",
                        "*.azureedge.net",
                        "*.microsoft.com",
                        "*.core.windows.net",
                        "github.com",
                        "*.github.com",
                        "raw.githubusercontent.com",
                        "aka.ms",
                        "*.azure-automation.net",
                        "*.ubuntu.com",
                        "api.snapcraft.io",
                        "*.azure.com"
                      ]
                    }
                  ]
                }
              }
            ],
            "networkRuleCollections": [
              {
                "name": "allow-network-rules",
                "properties": {
                  "priority": 100,
                  "action": {
                    "type": "allow"
                  },
                  "rules": [
                    {
                      "name": "allow-ntp",
                      "sourceAddresses": [
                        "*"
                      ],
                      "destinationAddresses": [
                        "*"
                      ],
                      "destinationPorts": [
                        "123",
                        "12000"
                      ],
                      "protocols": [
                        "Any"
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Network/azureFirewalls/providers/diagnosticsettings",
              "name": "[concat(variables('azure-fw-name'), '/Microsoft.Insights/service')]",
              "apiVersion": "2016-09-01",
              "location": "[resourceGroup().location]",
              "dependsOn": [
                "[concat('Microsoft.Network/azureFirewalls/', variables('azure-fw-name'))]"
              ],
              "properties": {
                "storageAccountId": "[resourceId(variables('oms-workspace-resourceGroup'), 'Microsoft.Storage/storageAccounts', variables('diagnostic-storageAccount-name'))]",
                "workspaceId": "[resourceId(variables('oms-workspace-resourceGroup'), 'Microsoft.OperationalInsights/workspaces', variables('oms-workspace-name'))]",
                "logs": [
                  {
                    "category": "AzureFirewallApplicationRule",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": true,
                      "days": "[parameters('logs-retention-in-days')]"
                    }
                  },
                  {
                    "category": "AzureFirewallNetworkRule",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": true,
                      "days": "[parameters('logs-retention-in-days')]"
                    }
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": true,
                      "days": "[parameters('logs-retention-in-days')]"
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "apiVersion": "2017-05-10",
          "name": "nestedDeploySharedSvcsUDR",
          "type": "Microsoft.Resources/deployments",
          "resourceGroup": "[variables('vnet-resourceGroup')]",
          "dependsOn": [
            "[resourceId('Microsoft.Network/azureFirewalls', variables('azure-fw-name'))]"
          ],
          "properties": {
            "mode": "Incremental",
            "template": {
              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "parameters": {},
              "variables": {},
              "resources": [
                {
                  "type": "Microsoft.Network/routeTables",
                  "apiVersion": "2017-10-01",
                  "location": "[resourceGroup().location]",
                  "name": "[concat(variables('deployment-prefix'), '-', variables('sharedsvcs-user-defined-routes').name, '-udr')]",
                  "tags": {
                    "displayName": "[concat(variables('deployment-prefix'), '-', variables('sharedsvcs-user-defined-routes').name, '-udr')]"
                  },
                  "properties": {
                    "routes": "[variables('sharedsvcs-user-defined-routes').routes]",
                    "disableBgpRoutePropagation": true
                  }
                }
              ]
            },
            "parameters": {}
          }
        }
      ],
      "outputs": {}
    }
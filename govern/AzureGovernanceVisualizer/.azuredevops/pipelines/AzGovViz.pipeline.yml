# AzGovViz v6_minor_20220502_2
# First things first:
# 1. Set needed variables in the AzGovViz.variables.yml file.
#
# Documentation: https://github.com/JulianHayward/Azure-MG-Sub-Governance-Reporting
# Also check https://www.azadvertizer.net - AzAdvertizer helps you to keep up with the pace by providing overview and insights on new releases and changes/updates for Azure Governance capabilities such as Azure Policy's policy definitions, initiatives (set definitions), aliases and Azure RBAC's role definitions and resource provider operations.

trigger: none

pr: none

variables:
  - template: ./AzGovViz.variables.yml

  - name: ScriptDir
    value: pwsh

  - name: Script
    value: AzGovVizParallel.ps1

#schedules:
#- cron: "0 0,12 * * *"
#  displayName: every 12h
#  always: true
#  branches:
#    include:
#    - master #CHECK branch 'master' is applicable? - delete me :)

#Running AzOps? Run AzGovViz after 'AzOps - Push' ..
#AzOps Accellerator https://github.com/Azure/AzOps-Accelerator
#resources:
#  pipelines:
#    - pipeline: 'Push'
#      source: 'AzOps - Push'
#      trigger:
#        branches:
#          include:
#            - master #CHECK branch 'master' is applicable? - delete me :)

jobs:
- job: AzGovViz
  timeoutInMinutes: 0

  pool:
    vmImage: 'ubuntu-20.04'

  steps:
  - pwsh: |
      Write-Host 'Build Script Arguments String...'

      $argumentsString = ''
      $scriptPath = '$(System.DefaultWorkingDirectory)/$(ScriptDir)/AzGovVizParallel.ps1'

      $astTokens = $null
      $astErrors = $null
      $ast = [System.Management.Automation.Language.Parser]::ParseFile($scriptPath, [ref]$astTokens, [ref]$astErrors)

      $scriptParameters = $ast.FindAll( { $args[0] -is [System.Management.Automation.Language.ParameterAst] }, $false)

      foreach ($scriptParameter in $scriptParameters) {
        $scriptParameterName = $scriptParameter.Name.VariablePath.UserPath
        $argument = Get-ChildItem -Path "Env:$( $scriptParameterName.ToUpper() )" -ErrorAction SilentlyContinue
        if ($argument.value) {
          if ($scriptParameter.StaticType.Name -eq 'SwitchParameter' -and $argument.Value -eq 'True') {
            $argumentsString += "-$( $scriptParameterName ) "
          } else {
            $argumentsString += "-$( $scriptParameterName ) '$( $argument.Value )' "
          }
          if ($scriptParameterName -eq 'outputPath') {
            $outputPath = "$( $argument.Value )"
          }
        }
      }

      Write-Host "Arguments String: $( $argumentsString.Trim() )"
      Write-Host "##vso[task.setvariable variable=ScriptArguments]$( $argumentsString.Trim() )"
      Write-Host "outputPath String: $( $outputPath )"
      Write-Host "##vso[task.setvariable variable=WIKIDIR]$( $outputPath )"
    displayName: 'Create Arguments String Variable'
  - task: PowerShell@2
    inputs:
      targetType: 'filePath'
      filePath: $(System.DefaultWorkingDirectory)/$(ScriptDir)/prerequisites.ps1
    displayName: 'Prerequisites check'
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)

  - task: AzurePowerShell@4
    inputs:
      azureSubscription: '$(ServiceConnection)'
      scriptType: filePath
      pwsh: true
      scriptPath: '$(System.DefaultWorkingDirectory)/$(ScriptDir)/$(Script)'
      scriptArguments: $(ScriptArguments) -ScriptPath $(ScriptDir)
      azurePowerShellVersion: latestVersion
    displayName: 'Run AzGovViz v6'

  - pwsh: |
      write-host "#################################"
      write-host "Push AzGovViz output to repository"
      write-host "#################################"
      $executionDateTimeInternationalReadable = get-date -format "dd-MMM-yyyy HH:mm:ss"
      $currentTimeZone = (Get-TimeZone).Id
      write-host "dbg: git config --global user.email"
      git config --global user.email "AzGovVizPipeline@azdo.com"
      $PipelineInfo = "Pipeline: '$(Build.DefinitionName)' 'rev $(Build.BuildNumber)' (Project: $([uri]::EscapeDataString("$(System.TeamProject)")); Repository: $(Build.Repository.Name); Branch: $(Build.SourceBranchName) Commit: $(Build.SourceVersion))"
      write-host "dbg: git config --global user.name PipelineInfo"
      git config --global user.name "$PipelineInfo"
      write-host "dbg: git config pull.rebase false"
      git config pull.rebase false
      write-host "dbg: git add --all"
      git add --all
      write-host "dbg: git commit -m 'wiki $executionDateTimeInternationalReadable ($currentTimeZone)'"
      git commit -m "wiki $executionDateTimeInternationalReadable ($currentTimeZone)"
      write-host "dbg: git -c http.extraheader='AUTHORIZATION: bearer System.AccessToken' push origin HEAD:$(Build.SourceBranchName)"
      git -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" push origin HEAD:$(Build.SourceBranchName)
    displayName: 'Push AzGovViz v6 output to repository'

# AzGovViz v6_minor_20220502_2
# First things first: 
# 1. edit line 61 and line 62 
# 2. check line 76 and 87 if branch 'master' is applicable 
# Documentation: https://github.com/JulianHayward/Azure-MG-Sub-Governance-Reporting
# Also check https://www.azadvertizer.net - AzAdvertizer helps you to keep up with the pace by providing overview and insights on new releases and changes/updates for Azure Governance capabilities such as Azure Policy's policy definitions, initiatives (set definitions), aliases and Azure RBAC's role definitions and resource provider operations.
# 
# Parameters reference (use in line 110)
# LimitCriticalPercentage | default is '80' | example: -LimitCriticalPercentage 90  | WhatDoesItDo? marks capabilities that approch limits e.g. limit 100, usage 80 will mark with warning
# SubscriptionQuotaIdWhitelist | default is 'undefined' | example: -SubscriptionQuotaIdWhitelist MSDN_, EnterpriseAgreement_ | WhatDoesItDo? processes only Subscriptions that startWith the given QuotaIds
# HierarchyMapOnly | switch | example: -HierarchyMapOnly | WhatDoesItDo? only creates the Hierarchy Tree
# DoNotShowRoleAssignmentsUserData | switch | example: -DoNotShowRoleAssignmentsUserData | WhatDoesItDo? scrub user information
# NoMDfCSecureScore | switch | example: -NoMDfCSecureScore | WhatDoesItDo? disables Microsoft Defender for Cloud Secure Score request for Subscriptions and Management Groups
# CsvDelimiter | example: -CsvDelimiter "," | WhatDoesItDo? the world is split into two kind of delimiters - comma and semicolon - choose yours
# NoPolicyComplianceStates | example: -NoPolicyComplianceStates | WhatDoesItDo? will not query policy compliance states
# NoResourceDiagnosticsPolicyLifecycle | example: -NoResourceDiagnosticsPolicyLifecycle | WhatDoesItDo? will not create Resource Diagnostics Policy Lifecycle recommendations
# NoAADGroupsResolveMembers | example: -NoAADGroupsResolveMembers | WhatDoesItDo? will not resolve Azure Active Directory Group memberships for Role assignments where identity type is 'Group'
# AADServicePrincipalExpiryWarningDays | example: -AADServicePrincipalExpiryWarningDays 21 | WhatDoesItDo? define warning period for Service Principal secret and certificate expiry; default is 14 days
# DoAzureConsumption | example: -DoAzureConsumption | WhatDoesItDo? Define if Azure Consumption data should be reported
# AzureConsumptionPeriod | example: -AzureConsumptionPeriod 7 | WhatDoesItDo? define for which time period Azure Consumption data should be gathered; default is 1 day
# NoAzureConsumptionReportExportToCSV | example: -NoAzureConsumptionReportExportToCSV | WhatDoesItDo? Azure Consumption data will not be exported (CSV)
# ThrottleLimit | example: -ThrottleLimit 10 | WhatDoesItDo? Define the number of script blocks running in parallel. Leveraging PowerShell CoreÂ´s parallel capability you can define the ThrottleLimit (default=5)
# DoTranscript | example: -DoTranscript | WhatDoesItDo? Log the console output
# AzureDevOpsWikiHierarchyDirection | example: -AzureDevOpsWikiHierarchyDirection "LR" | WhatDoesItDo? Define the direction the Hierarchy should be built in Azure DevOps WokiAsCode (Markdown) TD = TopDown (Horizontal), LR = LeftRight (Vertical)
# SubscriptionId4AzContext | example: -SubscriptionId4AzContext "<your-Subscription-Id>" | WhatDoesItDo? Define the Subscription Id to use for AzContext (default is to use a random Subscription Id)
# NoCsvExport | example: -NoCsvExport | WhatDoesItDo? Do not export enriched 'Role assignments' data, enriched 'Policy assignments' data and 'all resources' (subscriptionId, resourceType, id, name, location, tags, createdTime, changedTime)
# DoNotIncludeResourceGroupsOnPolicy | example: -DoNotIncludeResourceGroupsOnPolicy | WhatDoesItDo? Do not include Policy assignments on ResourceGroups
# DoNotIncludeResourceGroupsAndResourcesOnRBAC | example: -DoNotIncludeResourceGroupsAndResourcesOnRBAC | WhatDoesItDo? Do not include Role assignments on ResourceGroups and Resources
# ChangeTrackingDays | example: -ChangeTrackingDays 30 | WhatDoesItDo? Tracks newly created and updated custom Policy, PolicySet and RBAC Role definitions, Policy/RBAC Role assignments and Resources that occured within the last 14 days (default)
# FileTimeStampFormat | example: -FileTimeStampFormat "yyyyMM-dd_HHmm" | WhatDoesItDo? Time format for the output files (default is `yyyyMMdd_HHmmss`)
# NoJsonExport | example: -NoJsonExport | WhatDoesItDo? Do not export of ManagementGroup Hierarchy including all MG/Sub Policy/RBAC definitions, Policy/RBAC assignments and some more relevant information to JSON
# JsonExportExcludeResourceGroups | example: -JsonExportExcludeResourceGroups | WhatDoesItDo?| JSON Export will not include ResourceGroups (Policy & Role assignments)
# JsonExportExcludeResources | example: -JsonExportExcludeResources | WhatDoesItDo?| JSON Export will not include Resources (Role assignments)
# LargeTenant | example: -LargeTenant | WhatDoesItDo? A large tenant is a tenant with more than ~500 Subscriptions - the HTML output for large tenants simply becomes too big. If the parameter switch is true then the following parameters will be set: -PolicyAtScopeOnly $true, -RBACAtScopeOnly $true, -NoResourceProvidersDetailed $true, -NoScopeInsights $true
# PolicyAtScopeOnly | example: -PolicyAtScopeOnly | WhatDoesItDo? Removing 'inherited' lines in the HTML file for 'Policy Assignments'; use this parameter if you run against a larger tenants
# RBACAtScopeOnly | example: -RBACAtScopeOnly | WhatDoesItDo? Removing 'inherited' lines in the HTML file for 'Role Assignments'; use this parameter if you run against a larger tenants
# NoResourceProvidersDetailed | switch | example: -NoResourceProvidersDetailed | WhatDoesItDo? disables 'ResourceProvider Detailed' output for TenantSummary (compute intensive)
# NoScopeInsights | example: -NoScopeInsights | WhatDoesItDo? and why would you want to do this? In larger tenants the ScopeInsights section blows up the html file (up to unusable due to html file size). To further reduce the output use parameter -LargeTenant
# HtmlTableRowsLimit | example: -HtmlTableRowsLimit | WhatDoesItDo? Although the parameter -LargeTenant was introduced recently, still the html output may become too large to be processed properly. The new parameter defines the limit of rows - if for the html processing part the limit is reached then the html table will not be created (csv and json output will still be created). Default rows limit is 20.000
# AADGroupMembersLimit | example: -AADGroupMembersLimit 333 | WhatDoesItDo? Defines the limit (default=500) of AAD Group members; For AAD Groups that have more members than the defined limit Group members will not be resolved
# NoResources | example: -NoResources | WhatDoesItDo? Will speed up the processing time but information like Resource diagnostics capability, resource type stats, UserAssigned Identities assigned to Resources is excluded (featured for large tenants)
# StatsOptOut | example: -StatsOptOut | WhatDoesItDo? Will opt-out sending stats
# NoSingleSubscriptionOutput | example: -NoSingleSubscriptionOutput | WhatDoesItDo? Single Scope Insights output per Subscription should not be created
# ManagementGroupsOnly | example: -ManagementGroupsOnly | WhatDoesItDo? Collect data only for Management Groups (Subscription data such as e.g. Policy assignments etc. will not be collected)

trigger: none

pr: none

parameters:
- name: exludedResourceTypesDiagnosticsCapableParameters
  type: object
  default:
    - microsoft.web/certificates
- name: subscriptionQuotaIdWhitelistParameters
  type: object
  default:
    - undefined

variables:
  ServiceConnection: <YourServiceConnection> #permissions set? https://github.com/JulianHayward/Azure-MG-Sub-Governance-Reporting#required-permissions-in-azure 
  ManagementGroupId: <YourManagementGroupId>
  SubscriptionQuotaIdWhitelist: ${{ join(',',parameters.subscriptionQuotaIdWhitelistParameters) }}
  ExludedResourceTypesDiagnosticsCapable: ${{ join(',',parameters.exludedResourceTypesDiagnosticsCapableParameters) }}
  WikiDir: wiki
  CsvDelimiter: ;
  ScriptDir: pwsh
  Script: AzGovVizParallel.ps1

schedules:
- cron: "0 0,12 * * *"
  displayName: every 12h
  always: true
  branches:
    include:
    - master #CHECK branch 'master' is applicable? - delete me :)

#Running AzOps? Run AzGovViz after 'AzOps - Push' ..
#AzOps Accellerator https://github.com/Azure/AzOps-Accelerator
#resources:
#  pipelines:
#    - pipeline: 'Push'
#      source: 'AzOps - Push'
#      trigger:
#        branches:
#          include:
#            - master #CHECK: branch 'master' is applicable? - delete me :)

jobs:
- job: AzGovViz  
  timeoutInMinutes: 0

  pool:
    vmImage: 'ubuntu-20.04'

  steps:
  - task: PowerShell@2
    inputs:
      targetType: 'filePath'
      filePath: $(System.DefaultWorkingDirectory)/$(ScriptDir)/prerequisites.ps1
    displayName: 'Prerequisites check'
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
  - task: AzurePowerShell@4
    inputs:
      azureSubscription: '$(ServiceConnection)'
      scriptType: filePath
      pwsh: true
      scriptPath: '$(System.DefaultWorkingDirectory)/$(ScriptDir)/$(Script)'
      scriptArguments: '-ManagementGroupId $(ManagementGroupId) -ScriptPath $(ScriptDir) -OutputPath $(WikiDir) -CsvDelimiter "$(CsvDelimiter)" -SubscriptionQuotaIdWhitelist $(SubscriptionQuotaIdWhitelist) -ExludedResourceTypesDiagnosticsCapable $(ExludedResourceTypesDiagnosticsCapable)'
      azurePowerShellVersion: latestVersion
    displayName: 'Run AzGovViz v6'
  - powershell: |
      write-host "#################################"
      write-host "Push AzGovViz output to repository"
      write-host "#################################"
      $executionDateTimeInternationalReadable = get-date -format "dd-MMM-yyyy HH:mm:ss"
      $currentTimeZone = (Get-TimeZone).Id
      write-host "dbg: git config --global user.email"
      git config --global user.email "AzGovVizPipeline@azdo.com"
      $PipelineInfo = "Pipeline: '$(Build.DefinitionName)' 'rev $(Build.BuildNumber)' (Project: $([uri]::EscapeDataString("$(System.TeamProject)")); Repository: $(Build.Repository.Name); Branch: $(Build.SourceBranchName) Commit: $(Build.SourceVersion))"
      write-host "dbg: git config --global user.name PipelineInfo"
      git config --global user.name "$PipelineInfo"
      write-host "dbg: git config pull.rebase false"
      git config pull.rebase false
      write-host "dbg: git add --all"
      git add --all
      write-host "dbg: git commit -m 'wiki $executionDateTimeInternationalReadable ($currentTimeZone)'"
      git commit -m "wiki $executionDateTimeInternationalReadable ($currentTimeZone)"
      write-host "dbg: git -c http.extraheader='AUTHORIZATION: bearer System.AccessToken' push origin HEAD:$(Build.SourceBranchName)"
      git -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" push origin HEAD:$(Build.SourceBranchName)
    displayName: 'Push AzGovViz v6 output to repository'